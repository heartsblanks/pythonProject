Here is a structured and professional document based on the information you provided:

⸻

Deployment Tool Documentation

Overview

The deployment tool is composed of three primary components that work in conjunction to automate the deployment of applications. These components are:
	1.	Package Work Item (Package WI)
	2.	Release Configuration
	3.	Release Work Item (Release WI)

Each component plays a critical role in the packaging, configuration, and deployment process.

⸻

1. Package Work Item (Package WI)

The Package WI is responsible for retrieving the application package from Nexus and preparing it for deployment.

Key Inputs:
	•	Artifact Name: Must match the artifact name defined in the Release Configuration Item.
	•	Version: Specifies the version of the artifact.
	•	Path: URL or link to the artifact stored in Nexus.

Functionality:
	•	Downloads the specified package from Nexus.
	•	Zips the package.
	•	Stores the zipped package on the G3 server (assumption based on current process).

⸻

2. Release Configuration

The Release Configuration defines all instructions and variables required for deployment. It is automatically created or updated via Jenkins for each application.

Components:

a. Deploy Config XML
	•	Acts as the master configuration.
	•	Outlines all the deployment steps and structure.

b. Server Properties
	•	Contains environment-specific variables for target servers.
	•	Includes details such as IP addresses, ports, and other server-level parameters.

c. Application Properties
	•	Stores environment-specific application variables.
	•	Includes settings such as application names, context paths, and other app-specific values.

d. Playbook YAML
	•	Defines the playbooks used during deployment.
	•	Lists steps or tasks which are referenced by the Deploy Config XML.

⸻

3. Release Work Item (Release WI)

The Release WI is created to execute the deployment based on the Release Configuration.

Key Inputs:
	•	Release Configuration Reference: Points to the specific Release Configuration for the application.
	•	Release Configuration Variables: Passed in JSON format, specifying environment details (e.g., integration server).
	•	Package: Refers to the associated Package WI.

Functionality:
	•	Once created, the Release WI is saved, locked, and scheduled for test.
	•	A new release is initiated, enabling monitoring of task status and logs.

⸻

Build Execution Note

If a Jenkins build runs for more than 30 minutes:
	1.	Check the status of the deployment task.
	2.	If the task has already completed, request the administrators to forcefully complete the release.
	3.	This ensures the Jenkins pipeline can finish successfully and avoids unnecessary build failures.

⸻

Summary

The deployment tool efficiently packages, configures, and deploys applications through an automated pipeline. Understanding the interaction between the Package WI, Release Configuration, and Release WI ensures smoother operations and easier troubleshooting during deployments.

⸻

Let me know if you’d like this exported to a PDF or formatted in another style (e.g., for Confluence or SharePoint).